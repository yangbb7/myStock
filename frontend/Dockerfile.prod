# Production Dockerfile for myQuant Frontend
FROM node:18-alpine as builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git

# Copy package files
COPY package*.json ./

# Install dependencies with production optimizations
RUN npm ci --only=production --no-audit --no-fund && \
    npm cache clean --force

# Copy source code
COPY . .

# Build the application for production
ENV NODE_ENV=production
RUN npm run build

# Production stage with optimized Nginx
FROM nginx:alpine

# Install additional packages for production
RUN apk add --no-cache \
    curl \
    ca-certificates \
    tzdata \
    logrotate \
    && rm -rf /var/cache/apk/*

# Create nginx user and directories
RUN addgroup -g 1001 -S nginx-app && \
    adduser -S nginx-app -u 1001 -G nginx-app

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy production nginx configuration
COPY nginx.prod.conf /etc/nginx/nginx.conf

# Copy SSL configuration template
COPY ssl.conf /etc/nginx/conf.d/ssl.conf.template

# Create necessary directories
RUN mkdir -p /var/log/nginx /var/cache/nginx /var/run/nginx \
    /etc/nginx/conf.d /etc/ssl/certs /etc/ssl/private

# Set proper permissions
RUN chown -R nginx-app:nginx-app \
    /var/log/nginx \
    /var/cache/nginx \
    /var/run/nginx \
    /usr/share/nginx/html \
    /etc/nginx/conf.d

# Create health check script
RUN echo '#!/bin/sh' > /usr/local/bin/health-check.sh && \
    echo 'curl -f http://localhost/health || exit 1' >> /usr/local/bin/health-check.sh && \
    chmod +x /usr/local/bin/health-check.sh

# Create startup script
RUN echo '#!/bin/sh' > /usr/local/bin/start.sh && \
    echo 'set -e' >> /usr/local/bin/start.sh && \
    echo '' >> /usr/local/bin/start.sh && \
    echo '# Generate SSL configuration if certificates exist' >> /usr/local/bin/start.sh && \
    echo 'if [ -f /etc/ssl/certs/server.crt ] && [ -f /etc/ssl/private/server.key ]; then' >> /usr/local/bin/start.sh && \
    echo '  envsubst < /etc/nginx/conf.d/ssl.conf.template > /etc/nginx/conf.d/ssl.conf' >> /usr/local/bin/start.sh && \
    echo 'fi' >> /usr/local/bin/start.sh && \
    echo '' >> /usr/local/bin/start.sh && \
    echo '# Start nginx' >> /usr/local/bin/start.sh && \
    echo 'exec nginx -g "daemon off;"' >> /usr/local/bin/start.sh && \
    chmod +x /usr/local/bin/start.sh

# Switch to non-root user
USER nginx-app

# Expose ports
EXPOSE 80 443

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD /usr/local/bin/health-check.sh

# Labels for metadata
LABEL maintainer="myQuant Team" \
      version="1.0.0" \
      description="myQuant Frontend Production Image"

# Start the application
CMD ["/usr/local/bin/start.sh"]